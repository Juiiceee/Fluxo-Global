// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  walletAddress String    @unique
  name          String    @unique
  avatar        String?
  contacts      Contact[]
  enabledTools  String[]

  chats Chat[]

  @@map("users")
}

model Contact {
  id            String @id @default(cuid())
  name          String
  walletAddress String
  user          User   @relation(fields: [name], references: [name])

  @@map("contacts")
}

model Chat {
  id         String   @id @default(uuid())
  title      String
  createdAt  DateTime
  userAddress     String

  // Relations
  user     User      @relation(fields: [userAddress], references: [walletAddress], onDelete: Cascade)
  messages Message[]
  streams  Stream[]

  @@map("Chat")
}

model Message {
  id          String   @id @default(uuid())
  chatId      String
  role        String
  parts       Json
  attachments Json
  createdAt   DateTime

  // Relations
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("Message_v2")
}

model Stream {
  id        String   @id @default(uuid())
  chatId    String
  createdAt DateTime

  // Relations
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("Stream")
}
